apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
spec:
  type: ClusterIP
  selector:
    app: {{ .Values.AppName }}
  ports:
    - name: http
      protocol: TCP
      port: {{.Values.AppsPorts.http.port}}
      targetPort: {{.Values.AppsPorts.http.targetPort}}
    - name: https
      protocol: TCP
      port: {{.Values.AppsPorts.https.port}}
      targetPort: {{.Values.AppsPorts.https.targetPort}}

--- 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Namespace }}
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: / 
  {{if eq .Values.tls true}}
     cert-manager.io/cluster-issuer: "letsencrypt-staging"
  {{end}}

spec:
  ingressClassName: nginx
  # defaultBackend:
  #   service:
  #     name: api-ingress
  #     port:
  #       name: svc-port
{{if eq .Values.tls true}}
  tls:
  - hosts: 
    - api.averbuchpro.com
    secretName: letsencrypt-staging 
{{end}}
  rules:
  # - host: api.{{ .Release.Name }}.com
  - host: api.averbuchpro.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: {{ .Release.Name }}-service
              port:
                number: {{.Values.AppsPorts.http.port}}

--- 

# apiVersion: cert-manager.io/v1
# kind: Issuer
# metadata:
#   name: letsencrypt-staging
# spec:
#   acme:
#     # The ACME server URL
#     server: https://acme-staging-v02.api.letsencrypt.org/directory
#     # Email address used for ACME registration
#     email: ebta.alex.russia@gmail.com
#     # Name of a secret used to store the ACME account private key
#     privateKeySecretRef:
#       name: letsencrypt-staging
#     # Enable the HTTP-01 challenge provider
#     solvers:
#       - http01:
#           ingress:
#             ingressClassName: nginx

# ---

