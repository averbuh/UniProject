version: 2.1

orbs:
  sonarcloud: sonarsource/sonarcloud@2.0.0



commands:
  to_service_dir:
    parameters:
      service-path:
        default: .
        type: string
    steps:
    - run:
        name: Change directory
        command: |
          if [ -z << parameters.service-path >> ]; then
            echo "Parameter service-path is empty" >&2
            exit 1
          fi
          cd << parameters.service-path >>

executors:
  go-executor:
    docker:
    - image: cimg/go:1.21.6

parameters:
  run-recipes-go:
    default: false
    type: boolean
  run-suppliers-go:
    default: false
    type: boolean
  service-path:
    default: "."
    type: string


workflows:
  Test pipeline recipes param:
    when: << pipeline.parameters.run-recipes-go >>
    jobs:
    - Test feature pipeline
  Test pipeline suppliers param:
    when: << pipeline.parameters.run-suppliers-go >>
    jobs:
    - Test feature pipeline
  Lint, Test, Coverage Feature:
    when:
      and:
      - equal: ["recipes", << pipeline.parameters.service-path >>]
      - or:
        - << pipeline.parameters.run-recipes-go >>
        - << pipeline.parameters.run-suppliers-go >>
    jobs:
    - Test feature pipeline
    - Lint
    - Test and coverage
    - Sonar:
        requires:
        - Lint
        - Test and coverage


jobs:

  Test feature pipeline:
    working_directory: .
    executor: go-executor
    steps:
    - run:
        name: Test
        command: echo "Hello World"

  Lint:
    working_directory: ~/repo/<< pipeline.parameters.service-path >>
    executor: go-executor
    steps:
    - checkout
    # step from steps field
    - to_service_dir:
        service-path: << pipeline.parameters.service-path >>
    - run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.57.2
    - run: golangci-lint run ./... --out-format=checkstyle --print-issued-lines=false --print-linter-name=false --issues-exit-code=0 --enable=revive > golanci-report.xml
    - persist_to_workspace:
        root: ~/repo
        paths:
        - golanci-report.xml

  Test and coverage:
    working_directory: ~/repo
    executor: go-executor
    resource_class: large
    steps:
    - checkout
    - to_service_dir:
        service-path: << pipeline.parameters.service-path >>
    - restore_cache:
        keys:
        - go-mod-v4-{{ checksum "go.sum" }}
    - run:
        name: Install Dependencies
        command: go get ./...
    - save_cache:
        key: go-mod-v4-{{ checksum "go.sum" }}
        paths:
        - "/go/pkg/mod"

    - run:
        name: Run unit tests
        command: |
          mkdir -p /tmp/test-reports
          gotestsum --junitfile /tmp/test-reports/unit-tests.xml

    - store_test_results:
        path: /tmp/test-reports

    - run:
        name: Create temp dir for artifacts
        command: mkdir -p /tmp/artifacts

    - run:
        name: Run coverage
        command: |
          go test ./... -race -coverprofile=coverage.out -json > report.json
          go tool cover -html=coverage.out -o coverage.html
          mv coverage.html /tmp/artifacts

    - store_artifacts:
        path: /tmp/artifacts

    - persist_to_workspace:
        root: ~/repo
        paths:
        - coverage.out
        - report.json

  Sonar:
    working_directory: ~/repo
    executor: go-executor
    steps:
    - checkout
    - to_service_dir:
        service-path: << pipeline.parameters.service-path >>
    - attach_workspace:
        at: ~/repo

    - sonarcloud/scan:
        sonar_token_variable_name: SONAR_TOKEN



